dockering services :
deckering services :

1- create dockerfile and .dockerignore :

EXP :
FROM node:alpine

WORKDIR /app
COPY package.json ./
RUN npm install
COPY ./ ./

CMD ["npm", "start"]
2- docker build -t rateb/posts .
3- docker run rateb/posts OR docker run id

Creating Pod :

1- docker build -t rateb/posts:0.0.1 . OR docker build -t id:0.0.1 .
2-create file infra/k8s and create file : posts.yaml

EXP:

apiVersion: v1
kind: Pod
metadata:
  name: posts
spec:
  containers:
	- name: posts
	  image: rateb/posts:0.0.1
	  
3- kubectl apply -f posts.yaml 

help: kubectl get pods

Deployement :

1-create file infra/k8s and create file : posts-depl.yaml

EXP:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: posts-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: posts
  template:
    metadata:
      labels:
        app: posts
    spec:
      containers:
        - name: posts
          image: cygnetops/posts-71:0.0.1
		  
2- kubectl apply -f posts-depl.yaml

update deployement:

1- change code
2- docker build -t rateb/posts:0.0.5 . OR docker build -t id:0.0.5 .
3- posts-depl.yaml => image: cygnetops/posts-71:0.0.5
4- kubectl apply -f posts-depl.yaml

Preferred methode update deployement

1- remove :0.0.5 from posts-depl.yaml
2- kubectl apply -f posts-depl.yaml
3- update your code
4- docker build -t rateb/posts
5- docker push rateb/post
6- kubectl rollout restart deployement post-depl

Create NoteportService

1-create infra/k8s/posts-srv.yaml
EXP:
apiVersion: v1
kind: Service
metadata:
  name: posts-srv
spec:
  type: NodePort
  selector:
    app: posts
  ports:
    - name: posts
      protocol: TCP
      port: 4000
      targetPort: 4000






